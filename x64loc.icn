# modes: 1=as-is, 2=int, 3=?, 4=?, 5=?, 6=label
class x64loc(reg, offset, mode)
   method str()
    rv := ""
    case mode of {
      1: return reg
      2: return string(offset)
    3|4: return offset||"("||reg||")"
      5: return "$" || string(offset)
      6: return if integer(offset) then ".L"||offset else offset
      default: runerr(101, mode)
    }
   end
initially(x,y,z)
   if \z then { reg := x; offset := y; mode := z }
   else if \y then {
      if x === "imm" then { offset := y; mode := 5 }
      else if x === "lab" then { offset := y; mode := 6 }
      else {
         reg := x; offset := y
         if integer(y) then mode := 3 else mode := 4
         }
      }
   else {
      if integer(x) then { offset := x; mode := 2 }
      else if string(x) then { reg := x; mode := 1 }
      else stop("bad x64loc ", image(x))
   }
end
